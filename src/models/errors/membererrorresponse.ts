/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { NestError } from "./nesterror.js";

/**
 * Member error response schema.
 */
export type MemberErrorResponseData = {
  message: string;
};

/**
 * Member error response schema.
 */
export class MemberErrorResponse extends NestError {
  /** The original data that was passed to this error instance. */
  data$: MemberErrorResponseData;

  constructor(
    err: MemberErrorResponseData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;

    this.name = "MemberErrorResponse";
  }
}

/** @internal */
export const MemberErrorResponse$inboundSchema: z.ZodType<
  MemberErrorResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new MemberErrorResponse(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type MemberErrorResponse$Outbound = {
  message: string;
};

/** @internal */
export const MemberErrorResponse$outboundSchema: z.ZodType<
  MemberErrorResponse$Outbound,
  z.ZodTypeDef,
  MemberErrorResponse
> = z.instanceof(MemberErrorResponse)
  .transform(v => v.data$)
  .pipe(z.object({
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MemberErrorResponse$ {
  /** @deprecated use `MemberErrorResponse$inboundSchema` instead. */
  export const inboundSchema = MemberErrorResponse$inboundSchema;
  /** @deprecated use `MemberErrorResponse$outboundSchema` instead. */
  export const outboundSchema = MemberErrorResponse$outboundSchema;
  /** @deprecated use `MemberErrorResponse$Outbound` instead. */
  export type Outbound = MemberErrorResponse$Outbound;
}
