/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Ordering field
 */
export const AppsApiRestV0EventListEventsOrdering = {
  StartDate: "start_date",
  MinusStartDate: "-start_date",
  EndDate: "end_date",
  MinusEndDate: "-end_date",
} as const;
/**
 * Ordering field
 */
export type AppsApiRestV0EventListEventsOrdering = ClosedEnum<
  typeof AppsApiRestV0EventListEventsOrdering
>;

export type AppsApiRestV0EventListEventsRequest = {
  /**
   * Ordering field
   */
  ordering?: AppsApiRestV0EventListEventsOrdering | null | undefined;
  page?: number | undefined;
  pageSize?: number | null | undefined;
};

/** @internal */
export const AppsApiRestV0EventListEventsOrdering$inboundSchema:
  z.ZodNativeEnum<typeof AppsApiRestV0EventListEventsOrdering> = z.nativeEnum(
    AppsApiRestV0EventListEventsOrdering,
  );

/** @internal */
export const AppsApiRestV0EventListEventsOrdering$outboundSchema:
  z.ZodNativeEnum<typeof AppsApiRestV0EventListEventsOrdering> =
    AppsApiRestV0EventListEventsOrdering$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppsApiRestV0EventListEventsOrdering$ {
  /** @deprecated use `AppsApiRestV0EventListEventsOrdering$inboundSchema` instead. */
  export const inboundSchema =
    AppsApiRestV0EventListEventsOrdering$inboundSchema;
  /** @deprecated use `AppsApiRestV0EventListEventsOrdering$outboundSchema` instead. */
  export const outboundSchema =
    AppsApiRestV0EventListEventsOrdering$outboundSchema;
}

/** @internal */
export const AppsApiRestV0EventListEventsRequest$inboundSchema: z.ZodType<
  AppsApiRestV0EventListEventsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  ordering: z.nullable(AppsApiRestV0EventListEventsOrdering$inboundSchema)
    .optional(),
  page: z.number().int().default(1),
  page_size: z.nullable(z.number().int()).optional(),
}).transform((v) => {
  return remap$(v, {
    "page_size": "pageSize",
  });
});

/** @internal */
export type AppsApiRestV0EventListEventsRequest$Outbound = {
  ordering?: string | null | undefined;
  page: number;
  page_size?: number | null | undefined;
};

/** @internal */
export const AppsApiRestV0EventListEventsRequest$outboundSchema: z.ZodType<
  AppsApiRestV0EventListEventsRequest$Outbound,
  z.ZodTypeDef,
  AppsApiRestV0EventListEventsRequest
> = z.object({
  ordering: z.nullable(AppsApiRestV0EventListEventsOrdering$outboundSchema)
    .optional(),
  page: z.number().int().default(1),
  pageSize: z.nullable(z.number().int()).optional(),
}).transform((v) => {
  return remap$(v, {
    pageSize: "page_size",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppsApiRestV0EventListEventsRequest$ {
  /** @deprecated use `AppsApiRestV0EventListEventsRequest$inboundSchema` instead. */
  export const inboundSchema =
    AppsApiRestV0EventListEventsRequest$inboundSchema;
  /** @deprecated use `AppsApiRestV0EventListEventsRequest$outboundSchema` instead. */
  export const outboundSchema =
    AppsApiRestV0EventListEventsRequest$outboundSchema;
  /** @deprecated use `AppsApiRestV0EventListEventsRequest$Outbound` instead. */
  export type Outbound = AppsApiRestV0EventListEventsRequest$Outbound;
}

export function appsApiRestV0EventListEventsRequestToJSON(
  appsApiRestV0EventListEventsRequest: AppsApiRestV0EventListEventsRequest,
): string {
  return JSON.stringify(
    AppsApiRestV0EventListEventsRequest$outboundSchema.parse(
      appsApiRestV0EventListEventsRequest,
    ),
  );
}

export function appsApiRestV0EventListEventsRequestFromJSON(
  jsonString: string,
): SafeParseResult<AppsApiRestV0EventListEventsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      AppsApiRestV0EventListEventsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppsApiRestV0EventListEventsRequest' from JSON`,
  );
}
