/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type AppsApiRestV0MemberGetMemberRequest = {
  memberId: string;
};

/** @internal */
export const AppsApiRestV0MemberGetMemberRequest$inboundSchema: z.ZodType<
  AppsApiRestV0MemberGetMemberRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  member_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "member_id": "memberId",
  });
});

/** @internal */
export type AppsApiRestV0MemberGetMemberRequest$Outbound = {
  member_id: string;
};

/** @internal */
export const AppsApiRestV0MemberGetMemberRequest$outboundSchema: z.ZodType<
  AppsApiRestV0MemberGetMemberRequest$Outbound,
  z.ZodTypeDef,
  AppsApiRestV0MemberGetMemberRequest
> = z.object({
  memberId: z.string(),
}).transform((v) => {
  return remap$(v, {
    memberId: "member_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppsApiRestV0MemberGetMemberRequest$ {
  /** @deprecated use `AppsApiRestV0MemberGetMemberRequest$inboundSchema` instead. */
  export const inboundSchema =
    AppsApiRestV0MemberGetMemberRequest$inboundSchema;
  /** @deprecated use `AppsApiRestV0MemberGetMemberRequest$outboundSchema` instead. */
  export const outboundSchema =
    AppsApiRestV0MemberGetMemberRequest$outboundSchema;
  /** @deprecated use `AppsApiRestV0MemberGetMemberRequest$Outbound` instead. */
  export type Outbound = AppsApiRestV0MemberGetMemberRequest$Outbound;
}

export function appsApiRestV0MemberGetMemberRequestToJSON(
  appsApiRestV0MemberGetMemberRequest: AppsApiRestV0MemberGetMemberRequest,
): string {
  return JSON.stringify(
    AppsApiRestV0MemberGetMemberRequest$outboundSchema.parse(
      appsApiRestV0MemberGetMemberRequest,
    ),
  );
}

export function appsApiRestV0MemberGetMemberRequestFromJSON(
  jsonString: string,
): SafeParseResult<AppsApiRestV0MemberGetMemberRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      AppsApiRestV0MemberGetMemberRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppsApiRestV0MemberGetMemberRequest' from JSON`,
  );
}
