/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type AppsApiRestV0OrganizationGetOrganizationRequest = {
  organizationId: string;
};

/** @internal */
export const AppsApiRestV0OrganizationGetOrganizationRequest$inboundSchema:
  z.ZodType<
    AppsApiRestV0OrganizationGetOrganizationRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    organization_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "organization_id": "organizationId",
    });
  });

/** @internal */
export type AppsApiRestV0OrganizationGetOrganizationRequest$Outbound = {
  organization_id: string;
};

/** @internal */
export const AppsApiRestV0OrganizationGetOrganizationRequest$outboundSchema:
  z.ZodType<
    AppsApiRestV0OrganizationGetOrganizationRequest$Outbound,
    z.ZodTypeDef,
    AppsApiRestV0OrganizationGetOrganizationRequest
  > = z.object({
    organizationId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      organizationId: "organization_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppsApiRestV0OrganizationGetOrganizationRequest$ {
  /** @deprecated use `AppsApiRestV0OrganizationGetOrganizationRequest$inboundSchema` instead. */
  export const inboundSchema =
    AppsApiRestV0OrganizationGetOrganizationRequest$inboundSchema;
  /** @deprecated use `AppsApiRestV0OrganizationGetOrganizationRequest$outboundSchema` instead. */
  export const outboundSchema =
    AppsApiRestV0OrganizationGetOrganizationRequest$outboundSchema;
  /** @deprecated use `AppsApiRestV0OrganizationGetOrganizationRequest$Outbound` instead. */
  export type Outbound =
    AppsApiRestV0OrganizationGetOrganizationRequest$Outbound;
}

export function appsApiRestV0OrganizationGetOrganizationRequestToJSON(
  appsApiRestV0OrganizationGetOrganizationRequest:
    AppsApiRestV0OrganizationGetOrganizationRequest,
): string {
  return JSON.stringify(
    AppsApiRestV0OrganizationGetOrganizationRequest$outboundSchema.parse(
      appsApiRestV0OrganizationGetOrganizationRequest,
    ),
  );
}

export function appsApiRestV0OrganizationGetOrganizationRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  AppsApiRestV0OrganizationGetOrganizationRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      AppsApiRestV0OrganizationGetOrganizationRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'AppsApiRestV0OrganizationGetOrganizationRequest' from JSON`,
  );
}
