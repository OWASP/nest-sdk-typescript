/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

/**
 * Ordering field
 */
export const AppsApiRestV0ProjectListProjectsOrdering = {
  CreatedAt: "created_at",
  MinusCreatedAt: "-created_at",
  UpdatedAt: "updated_at",
  MinusUpdatedAt: "-updated_at",
} as const;
/**
 * Ordering field
 */
export type AppsApiRestV0ProjectListProjectsOrdering = ClosedEnum<
  typeof AppsApiRestV0ProjectListProjectsOrdering
>;

export type AppsApiRestV0ProjectListProjectsRequest = {
  /**
   * Level of the project
   */
  level?: models.ProjectLevel | null | undefined;
  /**
   * Ordering field
   */
  ordering?: AppsApiRestV0ProjectListProjectsOrdering | null | undefined;
  page?: number | undefined;
  pageSize?: number | null | undefined;
};

/** @internal */
export const AppsApiRestV0ProjectListProjectsOrdering$inboundSchema:
  z.ZodNativeEnum<typeof AppsApiRestV0ProjectListProjectsOrdering> = z
    .nativeEnum(AppsApiRestV0ProjectListProjectsOrdering);

/** @internal */
export const AppsApiRestV0ProjectListProjectsOrdering$outboundSchema:
  z.ZodNativeEnum<typeof AppsApiRestV0ProjectListProjectsOrdering> =
    AppsApiRestV0ProjectListProjectsOrdering$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppsApiRestV0ProjectListProjectsOrdering$ {
  /** @deprecated use `AppsApiRestV0ProjectListProjectsOrdering$inboundSchema` instead. */
  export const inboundSchema =
    AppsApiRestV0ProjectListProjectsOrdering$inboundSchema;
  /** @deprecated use `AppsApiRestV0ProjectListProjectsOrdering$outboundSchema` instead. */
  export const outboundSchema =
    AppsApiRestV0ProjectListProjectsOrdering$outboundSchema;
}

/** @internal */
export const AppsApiRestV0ProjectListProjectsRequest$inboundSchema: z.ZodType<
  AppsApiRestV0ProjectListProjectsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  level: z.nullable(models.ProjectLevel$inboundSchema).optional(),
  ordering: z.nullable(AppsApiRestV0ProjectListProjectsOrdering$inboundSchema)
    .optional(),
  page: z.number().int().default(1),
  page_size: z.nullable(z.number().int()).optional(),
}).transform((v) => {
  return remap$(v, {
    "page_size": "pageSize",
  });
});

/** @internal */
export type AppsApiRestV0ProjectListProjectsRequest$Outbound = {
  level?: string | null | undefined;
  ordering?: string | null | undefined;
  page: number;
  page_size?: number | null | undefined;
};

/** @internal */
export const AppsApiRestV0ProjectListProjectsRequest$outboundSchema: z.ZodType<
  AppsApiRestV0ProjectListProjectsRequest$Outbound,
  z.ZodTypeDef,
  AppsApiRestV0ProjectListProjectsRequest
> = z.object({
  level: z.nullable(models.ProjectLevel$outboundSchema).optional(),
  ordering: z.nullable(AppsApiRestV0ProjectListProjectsOrdering$outboundSchema)
    .optional(),
  page: z.number().int().default(1),
  pageSize: z.nullable(z.number().int()).optional(),
}).transform((v) => {
  return remap$(v, {
    pageSize: "page_size",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppsApiRestV0ProjectListProjectsRequest$ {
  /** @deprecated use `AppsApiRestV0ProjectListProjectsRequest$inboundSchema` instead. */
  export const inboundSchema =
    AppsApiRestV0ProjectListProjectsRequest$inboundSchema;
  /** @deprecated use `AppsApiRestV0ProjectListProjectsRequest$outboundSchema` instead. */
  export const outboundSchema =
    AppsApiRestV0ProjectListProjectsRequest$outboundSchema;
  /** @deprecated use `AppsApiRestV0ProjectListProjectsRequest$Outbound` instead. */
  export type Outbound = AppsApiRestV0ProjectListProjectsRequest$Outbound;
}

export function appsApiRestV0ProjectListProjectsRequestToJSON(
  appsApiRestV0ProjectListProjectsRequest:
    AppsApiRestV0ProjectListProjectsRequest,
): string {
  return JSON.stringify(
    AppsApiRestV0ProjectListProjectsRequest$outboundSchema.parse(
      appsApiRestV0ProjectListProjectsRequest,
    ),
  );
}

export function appsApiRestV0ProjectListProjectsRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  AppsApiRestV0ProjectListProjectsRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      AppsApiRestV0ProjectListProjectsRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'AppsApiRestV0ProjectListProjectsRequest' from JSON`,
  );
}
