/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import {
  ChapterSchema,
  ChapterSchema$inboundSchema,
  ChapterSchema$Outbound,
  ChapterSchema$outboundSchema,
} from "./chapterschema.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type PagedChapterSchema = {
  items: Array<ChapterSchema>;
  count: number;
};

/** @internal */
export const PagedChapterSchema$inboundSchema: z.ZodType<
  PagedChapterSchema,
  z.ZodTypeDef,
  unknown
> = z.object({
  items: z.array(ChapterSchema$inboundSchema),
  count: z.number().int(),
});

/** @internal */
export type PagedChapterSchema$Outbound = {
  items: Array<ChapterSchema$Outbound>;
  count: number;
};

/** @internal */
export const PagedChapterSchema$outboundSchema: z.ZodType<
  PagedChapterSchema$Outbound,
  z.ZodTypeDef,
  PagedChapterSchema
> = z.object({
  items: z.array(ChapterSchema$outboundSchema),
  count: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PagedChapterSchema$ {
  /** @deprecated use `PagedChapterSchema$inboundSchema` instead. */
  export const inboundSchema = PagedChapterSchema$inboundSchema;
  /** @deprecated use `PagedChapterSchema$outboundSchema` instead. */
  export const outboundSchema = PagedChapterSchema$outboundSchema;
  /** @deprecated use `PagedChapterSchema$Outbound` instead. */
  export type Outbound = PagedChapterSchema$Outbound;
}

export function pagedChapterSchemaToJSON(
  pagedChapterSchema: PagedChapterSchema,
): string {
  return JSON.stringify(
    PagedChapterSchema$outboundSchema.parse(pagedChapterSchema),
  );
}

export function pagedChapterSchemaFromJSON(
  jsonString: string,
): SafeParseResult<PagedChapterSchema, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PagedChapterSchema$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PagedChapterSchema' from JSON`,
  );
}
