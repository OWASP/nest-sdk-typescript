/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { communityGetMember } from "../funcs/communityGetMember.js";
import { communityGetOrganization } from "../funcs/communityGetOrganization.js";
import { communityListMembers } from "../funcs/communityListMembers.js";
import { communityListOrganizations } from "../funcs/communityListOrganizations.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Community extends ClientSDK {
  /**
   * List members
   *
   * @remarks
   * Retrieve a paginated list of OWASP community members.
   */
  async listMembers(
    request?: operations.ListMembersRequest | undefined,
    options?: RequestOptions,
  ): Promise<models.PagedMemberSchema> {
    return unwrapAsync(communityListMembers(
      this,
      request,
      options,
    ));
  }

  /**
   * Get member
   *
   * @remarks
   * Retrieve member details.
   */
  async getMember(
    request: operations.GetMemberRequest,
    options?: RequestOptions,
  ): Promise<models.MemberSchema> {
    return unwrapAsync(communityGetMember(
      this,
      request,
      options,
    ));
  }

  /**
   * List organizations
   *
   * @remarks
   * Retrieve a paginated list of GitHub organizations.
   */
  async listOrganizations(
    request?: operations.ListOrganizationsRequest | undefined,
    options?: RequestOptions,
  ): Promise<models.PagedOrganizationSchema> {
    return unwrapAsync(communityListOrganizations(
      this,
      request,
      options,
    ));
  }

  /**
   * Get organization
   *
   * @remarks
   * Retrieve project details.
   */
  async getOrganization(
    request: operations.GetOrganizationRequest,
    options?: RequestOptions,
  ): Promise<models.OrganizationSchema> {
    return unwrapAsync(communityGetOrganization(
      this,
      request,
      options,
    ));
  }
}
