/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { communityAppsApiRestV0MemberGetMember } from "../funcs/communityAppsApiRestV0MemberGetMember.js";
import { communityAppsApiRestV0OrganizationGetOrganization } from "../funcs/communityAppsApiRestV0OrganizationGetOrganization.js";
import { communityAppsApiRestV0OrganizationListOrganization } from "../funcs/communityAppsApiRestV0OrganizationListOrganization.js";
import { communityListMembers } from "../funcs/communityListMembers.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Community extends ClientSDK {
  /**
   * List members
   *
   * @remarks
   * Retrieve a paginated list of OWASP community members.
   */
  async listMembers(
    request?: operations.ListMembersRequest | undefined,
    options?: RequestOptions,
  ): Promise<models.PagedMemberSchema> {
    return unwrapAsync(communityListMembers(
      this,
      request,
      options,
    ));
  }

  /**
   * Get member
   *
   * @remarks
   * Retrieve member details.
   */
  async appsApiRestV0MemberGetMember(
    request: operations.AppsApiRestV0MemberGetMemberRequest,
    options?: RequestOptions,
  ): Promise<models.MemberSchema> {
    return unwrapAsync(communityAppsApiRestV0MemberGetMember(
      this,
      request,
      options,
    ));
  }

  /**
   * List organizations
   *
   * @remarks
   * Retrieve a paginated list of GitHub organizations.
   */
  async appsApiRestV0OrganizationListOrganization(
    request?:
      | operations.AppsApiRestV0OrganizationListOrganizationRequest
      | undefined,
    options?: RequestOptions,
  ): Promise<models.PagedOrganizationSchema> {
    return unwrapAsync(communityAppsApiRestV0OrganizationListOrganization(
      this,
      request,
      options,
    ));
  }

  /**
   * Get organization
   *
   * @remarks
   * Retrieve project details.
   */
  async appsApiRestV0OrganizationGetOrganization(
    request: operations.AppsApiRestV0OrganizationGetOrganizationRequest,
    options?: RequestOptions,
  ): Promise<models.OrganizationSchema> {
    return unwrapAsync(communityAppsApiRestV0OrganizationGetOrganization(
      this,
      request,
      options,
    ));
  }
}
