/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { milestonesGetMilestone } from "../funcs/milestonesGetMilestone.js";
import { milestonesListMilestones } from "../funcs/milestonesListMilestones.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Milestones extends ClientSDK {
  /**
   * List milestones
   *
   * @remarks
   * Retrieve a paginated list of GitHub milestones.
   */
  async listMilestones(
    request?: operations.ListMilestonesRequest | undefined,
    options?: RequestOptions,
  ): Promise<models.PagedMilestone> {
    return unwrapAsync(milestonesListMilestones(
      this,
      request,
      options,
    ));
  }

  /**
   * Get milestone
   *
   * @remarks
   * Retrieve a specific GitHub milestone by organization, repository, and milestone number.
   */
  async getMilestone(
    request: operations.GetMilestoneRequest,
    options?: RequestOptions,
  ): Promise<models.MilestoneDetail> {
    return unwrapAsync(milestonesGetMilestone(
      this,
      request,
      options,
    ));
  }
}
