/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { releasesGetRelease } from "../funcs/releasesGetRelease.js";
import { releasesListReleases } from "../funcs/releasesListReleases.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Releases extends ClientSDK {
  /**
   * List releases
   *
   * @remarks
   * Retrieve a paginated list of GitHub releases.
   */
  async listReleases(
    request?: operations.ListReleasesRequest | undefined,
    options?: RequestOptions,
  ): Promise<models.PagedRelease> {
    return unwrapAsync(releasesListReleases(
      this,
      request,
      options,
    ));
  }

  /**
   * Get release
   *
   * @remarks
   * Retrieve a specific GitHub release by organization, repository, and tag name.
   */
  async getRelease(
    request: operations.GetReleaseRequest,
    options?: RequestOptions,
  ): Promise<models.ReleaseDetail> {
    return unwrapAsync(releasesGetRelease(
      this,
      request,
      options,
    ));
  }
}
