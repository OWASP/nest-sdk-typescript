/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { repositoriesGetRepository } from "../funcs/repositoriesGetRepository.js";
import { repositoriesListRepositories } from "../funcs/repositoriesListRepositories.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Repositories extends ClientSDK {
  /**
   * List repositories
   *
   * @remarks
   * Retrieve a paginated list of GitHub repositories.
   */
  async listRepositories(
    request?: operations.ListRepositoriesRequest | undefined,
    options?: RequestOptions,
  ): Promise<models.PagedRepository> {
    return unwrapAsync(repositoriesListRepositories(
      this,
      request,
      options,
    ));
  }

  /**
   * Get repository
   *
   * @remarks
   * Retrieve a specific GitHub repository by organization and repository name.
   */
  async getRepository(
    request: operations.GetRepositoryRequest,
    options?: RequestOptions,
  ): Promise<models.RepositoryDetail> {
    return unwrapAsync(repositoriesGetRepository(
      this,
      request,
      options,
    ));
  }
}
